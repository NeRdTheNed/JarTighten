buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

apply plugin: 'java'

group = 'com.github.NeRdTheNed.JarTighten'
version = project.version

final def build_release = System.getenv("BUILD_RELEASE") == "true"

// Add snapshot suffix to version if not building a release.
// To build a release, set the environment variable BUILD_RELEASE to true.
if (!build_release) {
    version += "-SNAPSHOT"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

final def compiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(8)
}

// Tells Gradle to use the previously defined Java 8 compatible JDK.
java {
    toolchain {
        compiler
    }
}

// Tells Gradle to always compile with the previously defined Java 8 compatible JDK.
tasks.withType(JavaCompile).configureEach {
    javaCompiler = compiler
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // Tells Gradle to include more debug information in compiled .class files.
    options.debug = true
    options.debugOptions.debugLevel = 'source,lines,vars'
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

shadowJar {
    //minimize()

    archiveClassifier = 'all'
}

dependencies {
    implementation 'info.picocli:picocli:4.7.4'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.4'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-jdk14:2.0.7'

    implementation project(':JarTighten-lib')

    shadow 'info.picocli:picocli:4.7.4'

    shadow 'org.slf4j:slf4j-api:2.0.7'
    shadow 'org.slf4j:slf4j-jdk14:2.0.7'

    shadow 'com.github.Col-E:LL-Java-Zip:1.6.1'
    shadow 'com.github.eustas:CafeUndZopfli:5cdf283e67'

    shadow project(':JarTighten-lib')
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.NeRdTheNed.JarTighten.CMDMain'
        )
    }
}

build.finalizedBy(shadowJar)
