buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.github.nerdthened.jartighten' version '1.2.+'
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

apply plugin: 'java'

group = 'io.github.NeRdTheNed.JarTighten'
version = project.version

final def build_release = System.getenv("BUILD_RELEASE") == "true"

// Add snapshot suffix to version if not building a release.
// To build a release, set the environment variable BUILD_RELEASE to true.
if (!build_release) {
    version += "-SNAPSHOT"
}

final def compiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(8)
}

// Tells Gradle to use the previously defined Java 8 compatible JDK.
java {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    toolchain {
        compiler
    }
}

// Tells Gradle to always compile with the previously defined Java 8 compatible JDK.
tasks.withType(JavaCompile).configureEach {
    javaCompiler = compiler
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // Tells Gradle to include more debug information in compiled .class files.
    options.debug = true
    options.debugOptions.debugLevel = 'source,lines,vars'
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

shadowJar {
    //minimize()

    archiveClassifier = 'all'
}

import io.github.NeRdTheNed.JarTighten.JarTightenTask

tasks.register('jartightenShadow', JarTightenTask) {
    dependsOn(shadowJar)

    inputFile = layout.projectDirectory.file('build/libs/' + project.name + '-' + version + '-all.jar')
    outputFile = layout.projectDirectory.file('build/libs/' + project.name + '-' + version + '-all.jar')

    removeTimestamps = true
    removeComments = true
    removeExtra = true
    removeDirectoryEntries = true
    sortEntries = true

    if (build_release) {
        recompressZopfli = true
        recompressJZopfli = true
        recompressZopfliPasses = 99
        mode = 'EXTENSIVE'
        optimiseDeflateStreamExisting = true
        optimiseDeflateStreamRecompress = true
        compareDeflateStreamBits = true
    }
}

build.finalizedBy(jartightenShadow)

jartighten {
    removeTimestamps = true
    removeComments = true

    if (build_release) {
        recompressZopfli = true
    }
}

build.finalizedBy(jartighten)

dependencies {
    implementation 'info.picocli:picocli:4.7.4'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.4'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-jdk14:2.0.7'

    implementation project(':JarTighten-lib')
}

jar {
    manifest {
        attributes(
                'Main-Class': 'io.github.NeRdTheNed.JarTighten.CMDMain'
        )
    }
}
